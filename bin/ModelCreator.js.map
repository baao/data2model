{"version":3,"sources":["ModelCreator.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;uBAMe,UAAU;;;;2BACL,eAAe;;;;AACnC,IAAM,MAAM,GAAG,yBAAQ,OAAO,CAAC;;IAEzB,YAAY,GACH,SADT,YAAY,CACF,IAAI,EAAE;0BADhB,YAAY;;AAEV,QAAI,EAAE,GAAG,qBAAG,kBAAkB,yCAAsB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,UAAO;QAC9E,UAAU,GAAG,EAAE;QACf,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC;QACnC,OAAO,GAAG,8BAA8B,GAAG,SAAS,GAAG,4CAA4C,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,yBAAyB;QAC1J,YAAY,GAAG,+DAA+D;QAC9E,UAAU,gBACd,SAAS,ybAaP,CAAC;AACH,QAAI,UAAO,CAAC,aAAa,CAAC,CAAC;;;;;;AAC3B,6BAAwB,IAAI,CAAC,OAAO,EAAE,8HAAE;;;gBAA9B,GAAG;gBAAC,KAAK;;AACf,sBAAU,CAAC,IAAI,oBACb,GAAG,+BACC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,eAAe,CAAA,4BACzE,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,eAAe,GAAG,iBAAiB,CAAA,4BAC1D,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,gBAAgB,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,wBAAwB,CAAA,oKAMvG,CAAA;SACL;;;;;;;;;;;;;;;;AACD,cAAU,GAAG,UAAU,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AAC/F,MAAE,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,GAAG,YAAY,GAAG,MAAM,GAAG,UAAU,GAAG,gBAAgB,GAAG,iBAAiB,GAAG,SAAS,GAAG,GAAG,CAAC,CAAC;AACzH,WAAO,IAAI,CAAC;CACf;;qBAEU,YAAY","file":"ModelCreator.js","sourcesContent":["/**\n * data2model\n * Author: michael\n * Date: 09.09.15.\n * License: MIT\n */\nimport fs from 'fs-extra';\nimport appRoot from 'app-root-path';\nconst reqLib = appRoot.require;\n\nclass ModelCreator {\n    constructor(data) {\n        let ws = fs.createOutputStream(`${appRoot}/models/${data.get('_tableName_')}.es6`),\n            columnData = [],\n            tableName = data.get('_tableName_'),\n            comment = '/**\\n * xml2model model for ' + tableName + '\\n * createdBy: ModelCreator\\n * created: ' + new Date().toISOString() + '\\n * License: MIT\\n **/',\n            requireFiles = '\"use strict\";\\nconst _BaseModel = require(\"./_BaseModel.js\");',\n            fileHeader = `\nclass ${tableName} extends _BaseModel {\n    constructor(options) {\n        options = options || {};\n        super(options);\n        this.groupBy = [];\n        this.firstLine = [];\n        this.functionsBeforeParse = [];\n        this.functionsAfterParse = [];\n        this.checkFunctionAfterParse = '';\n        // this.savePoint = '';\n        // this.needTemporaryTable = false;\n        this.columns = {\n            :columnData:\n        }`;\n        data.delete('_tableName_');\n        for (let [key,value] of data.entries()) {\n            columnData.push(`\n            ${key} : {\n                ${value.has('find') ? 'find: \"' + value.get('find') + '\"' : '// find: null'},\n                ${value.has('exclude') ? 'exclude: true' : '//exclude: null'},\n                ${value.has('defaultValue') ? 'defaultValue: ' + value.get('defaultValue') : '// defaultValue: false'},\n                // valueOptions: {\n                //    replace: {},\n                //    regex: {}\n                // }\n            },\n            `)\n        }\n        fileHeader = fileHeader.replace(':columnData:', columnData.join(' ').trim().replace(/,$/, ''));\n        ws.write(comment + '\\n\\n' + requireFiles + '\\n\\n' + fileHeader + '\\n\\n\\t}\\n}\\n\\n' + 'export default ' + tableName + ';');\n        return true;\n    }\n}\nexport default ModelCreator;"]}